Val1<-rnorm(10,mean=25, sd=5) #say, traffic volume in Holland T as normal distribution with mean and sd
Val2<-rnorm(10,mean=30, sd=5) #say, traffic volume in Lincoln T as normal distribution with mean and sd
Val<-c(Val1,Val2) #A variable with 20 rows, with first 10 rows containing 10 random normal values of Val1 #and the next 10 values of Val2
Val
d<-data.frame(Cat,Val)
Observed_Difference<-mean(d[d$Cat=='GroupA',2])-mean(d[d$Cat=='GroupB',2])
Observed_Difference
#Try changing mean and sd values. When you run this you will see that the difference is sometimes negative #or sometimes positive.
# null hypothesis is that there is no difference
PermutationTestSecond::Permutation(d, "Cat", "Val",100000, "GroupA", "GroupB")
#Try changing mean and sd values. When you run this you will see that the difference is sometimes negative #or sometimes positive.
# null hypothesis is that there is no difference
PermutationTestSecond::Permutation(d, "Cat", "Val",1000, "GroupA", "GroupB")
Val1<-rnorm(10,mean=25, sd=10) #say, traffic volume in Holland T as normal distribution with mean and sd
Val2<-rnorm(10,mean=30, sd=10) #say, traffic volume in Lincoln T as normal distribution with mean and sd
Val<-c(Val1,Val2) #A variable with 20 rows, with first 10 rows containing 10 random normal values of Val1 #and the next 10 values of Val2
Val
d<-data.frame(Cat,Val)
Observed_Difference<-mean(d[d$Cat=='GroupA',2])-mean(d[d$Cat=='GroupB',2])
Observed_Difference
#Try changing mean and sd values. When you run this you will see that the difference is sometimes negative #or sometimes positive.
# null hypothesis is that there is no difference
PermutationTestSecond::Permutation(d, "Cat", "Val",1000, "GroupA", "GroupB")
Val1<-rnorm(10,mean=40, sd=10) #say, traffic volume in Holland T as normal distribution with mean and sd
Val2<-rnorm(10,mean=30, sd=10) #say, traffic volume in Lincoln T as normal distribution with mean and sd
Val<-c(Val1,Val2) #A variable with 20 rows, with first 10 rows containing 10 random normal values of Val1 #and the next 10 values of Val2
Val
d<-data.frame(Cat,Val)
Observed_Difference<-mean(d[d$Cat=='GroupA',2])-mean(d[d$Cat=='GroupB',2])
Observed_Difference
#Try changing mean and sd values. When you run this you will see that the difference is sometimes negative #or sometimes positive.
# null hypothesis is that there is no difference
PermutationTestSecond::Permutation(d, "Cat", "Val",1000, "GroupA", "GroupB")
Val1<-rnorm(10,mean=60, sd=10) #say, traffic volume in Holland T as normal distribution with mean and sd
Val2<-rnorm(10,mean=30, sd=10) #say, traffic volume in Lincoln T as normal distribution with mean and sd
Val<-c(Val1,Val2) #A variable with 20 rows, with first 10 rows containing 10 random normal values of Val1 #and the next 10 values of Val2
Val
d<-data.frame(Cat,Val)
Observed_Difference<-mean(d[d$Cat=='GroupA',2])-mean(d[d$Cat=='GroupB',2])
Observed_Difference
#Try changing mean and sd values. When you run this you will see that the difference is sometimes negative #or sometimes positive.
# null hypothesis is that there is no difference
PermutationTestSecond::Permutation(d, "Cat", "Val",1000, "GroupA", "GroupB")
Observed_Difference<-mean(d[d$Cat=='GroupA',2])-mean(d[d$Cat=='GroupB',2])
Observed_Difference
Observed_Difference<-mean(d[d$Cat=='GroupA',2])-mean(d[d$Cat=='GroupB',2])
Observed_Difference
#Try changing mean and sd values. When you run this you will see that the difference is sometimes negative #or sometimes positive.
# null hypothesis is that there is no difference
PermutationTestSecond::Permutation(d, "Cat", "Val",1000, "GroupA", "GroupB")
Val1<-rnorm(10,mean=20, sd=10) #say, traffic volume in Holland T as normal distribution with mean and sd
Val2<-rnorm(10,mean=30, sd=10) #say, traffic volume in Lincoln T as normal distribution with mean and sd
Val<-c(Val1,Val2) #A variable with 20 rows, with first 10 rows containing 10 random normal values of Val1 #and the next 10 values of Val2
Val
d<-data.frame(Cat,Val)
Observed_Difference<-mean(d[d$Cat=='GroupA',2])-mean(d[d$Cat=='GroupB',2])
Observed_Difference
#Try changing mean and sd values. When you run this you will see that the difference is sometimes negative #or sometimes positive.
# null hypothesis is that there is no difference
PermutationTestSecond::Permutation(d, "Cat", "Val",1000, "GroupA", "GroupB")
Val1<-rnorm(10,mean=10, sd=10) #say, traffic volume in Holland T as normal distribution with mean and sd
Val2<-rnorm(10,mean=30, sd=20) #say, traffic volume in Lincoln T as normal distribution with mean and sd
Val<-c(Val1,Val2) #A variable with 20 rows, with first 10 rows containing 10 random normal values of Val1 #and the next 10 values of Val2
Val
d<-data.frame(Cat,Val)
Observed_Difference<-mean(d[d$Cat=='GroupA',2])-mean(d[d$Cat=='GroupB',2])
Observed_Difference
#Try changing mean and sd values. When you run this you will see that the difference is sometimes negative #or sometimes positive.
# null hypothesis is that there is no difference
PermutationTestSecond::Permutation(d, "Cat", "Val",1000, "GroupA", "GroupB")
firstName <- c("Ethan", "John", "Selina")
lastName <- c("Hunt", "Whick", "Kyle")
sex <- c("MALE", "MALE", "FEMALE")
score <- c(97, 88, 85)
stu_df1 <- data.frame(firstName, lastName, sex, score)
stu_df1
#preparing another data frame with 3 rows
surName <- c("Hunt", "Whick", "Kyle")
hairColor <- c("Black", "Black", "Red")
age <- c(40, 42, 24)
stu_df2 <- data.frame(surName, hairColor, age)
stu_df2
cbind(stu_df1,stu_df2)
file1 <- data.frame(name=c("Peter","John","Robin"), skill=c(2,1,7))
file2 <- data.frame(name=c("Peter","Robin","Mike"),skill=c(3,1,4))
merge(file1,file2,by=c("name"))
merge(file1,file2,by=c("name"),all.x=TRUE)
file1 <- data.frame(name=c("Petter","John","Robin"), skill=c(2,1,7))
file2 <- data.frame(name=c("Petter","Robin","Mike"),skill=c(3,1,4))
rbind(file1,file2)
merge(file1,file2,by.x="name", by.y="surname")
file1 <- data.frame(name=c("Peter","John","Robin"), skill=c(2,1,7))
file2 <- data.frame(surname=c("Peter","Robin","Mike"),skill=c(3,1,4))
merge(file1,file2,by.x="name", by.y="surname")
file1 <- data.frame(name=c("Peter","John","Robin"), skill=c(2,1,7))
file2 <- data.frame(surname=c("P","Ro","M"),skill=c(3,1,4))
merge(file1,file2,by.x="name", by.y="surname")
moody <- read.csv("https://raw.githubusercontent.com/kunal0895/RDatasets/master/Moody2018.csv")
moody[,8] <- ""
moody[moody$GRADE=="F",8] <- "fail"
moody <- read.csv("https://raw.githubusercontent.com/kunal0895/RDatasets/master/Moody2018.csv")
moody[,8] <- ""
moody[moody$GRADE=="F",8] <- "fail"
#"==" is a judgement sign, if grade is equal to "F", then we consider it as "fail"
moody[1:20,1:8]
#"==" is a judgement sign, if grade is equal to "F", then we consider it as "fail"
moody[1:20]
#"==" is a judgement sign, if grade is equal to "F", then we consider it as "fail"
moody[1:3]
View(moody)
u <- c(1:10)
u
u <- c(1:10)
w <- c(1,-1,3)
u[w>0]
w
u[w>1]
u[w>2]
moody <- read.csv("https://raw.githubusercontent.com/kunal0895/RDatasets/master/Moody2018.csv")
View(moody)
moody[,8] <- ""
moody[,8] <- " "
moody[moody$GRADE=="F",8] <- "fail"
moody[,moody$GRADE=="F",8] <- "fail"
moody <- read.csv("https://raw.githubusercontent.com/kunal0895/RDatasets/master/Moody2018.csv")
View(moody)
moody <- read.csv("https://raw.githubusercontent.com/kunal0895/RDatasets/master/Moody2018.csv")
View(moody)
moody[,6] <- " "
moody
moody[moody$GRADE=="F",6] <- "fail"
moody
moody[moody$GRADE!="F",6] <- "pass"
moody
moody[1,2]
moody[1,]
moody[1,2]
moody[1,1]
moody[1,4]
moody[,4]
moody[1:2,3:4]
moody[,c(3,4)]
moody[c(3,4)]
moody[c(3,4)]
moody[3:4]
moody[2]
u <- c(1,"2",3)
u
u <- c(1,T,3)
u
u <- c("1",T,3)
u
moody[,2:1]
moody[,"GRADE"]
moody["GRADE",]
moody[10]
moody[0]
moody[10]
moody[2]
moody[,2]
what <- moody[moody$GRADE == "f"]
what
table(moody$TEXTING_IN_CLASS, moody$DOZES_OFF)
table(moody$SCORE, moody$DOZES_OFF)
what <- moody[moody$GRADE == "f"]
what
u[w]
u[w>-1]
u[w>-1]
u[w>0]
u <- c(1:10)
w <- c(1,-1,3)
u[w>0]
u[w>-1]
t<- data.frame(x=c(1,2,3),y=(3,2,1), z=x("a","b","c"))
t<- data.frame(x=c(1,2,3), y=c(3,2,1), z=x("a","b","c"))
t<- data.frame(x=c(1,2,3), y=c(3,2,1), z=c("a","b","c"))
t[1,]
t[,2:1]
moody[,c(1,2)]
moody[c(1,2)]
moody[,c(1,2)]
t[,t$y==2]
t[,t$y==1]
t[,t$y==2]
t<- data.frame(x=c(1,2,3), y=c(4,2,1), z=c("a","b","c"))
t[,t$y==2]
t[,t$y==1]
t[,t$y==3]
t[,t$y==0]
t[,t$y==2]
t[,t$y=1]
t[,t$y=1]
t[,t$y==1]
t[,t$y==3]
t<- data.frame(x=c(1,2,3), y=c(1,2,1), z=c("a","b","c"))
t[,t$y==1]
t<- data.frame(x=c(1,2,3), y=c(3,2,1), z=c("a","b","c"))
t[,t$y==1]
t[,t$y==2]
t[,t$y==1]
t
t[,t$y==1]
t<- data.frame(x=c(1,2,3), y=c(3,2,1), z=c("a","b","c"),  r=c("b","b","b"))
t
t[,t$y==1]
t[,t$y==3]
t[,t$x==3]
t[,t$x==4]
t[,t$x==3]
t[1:2,]
t[1,]
t[,2]
t[,t$z==3]
t[,t$z=="a"]
t[,t$z=="z"]
t<- data.frame(x=c(1,2,4), y=c(3,2,1), z=c("a","b","c"),  r=c("b","b","b"))
t[,t$x=="z"]
t[,t$x=="4"]
t[,t$x=="3"]
t[,t$x==3]
t[,t$x==2]
t[,t$y==2]
t[,t$z==2]
t[,t$x==1]
t[,t$x]
t[,t$x==1]
t[,t$y==1]
t[,t$x==2]
t[,t$y==1]
t<- data.frame(x=c(1,2,3), y=c(3,2,1), z=c("a","b","c"),  r=c("r","b","b"))
t[,t$y==1]
moody(,moody$GRADE=2)
moody(,moody$GRADE==2)
moody <- read.csv("https://raw.githubusercontent.com/kunal0895/RDatasets/master/Moody2018.csv")
moody(,moody$GRADE==2)
moody[,moody$GRADE==2]
moody[,moody$GRADE==1]
View(moody)
moody[,moody$SCORE==2]
moody[,moody$SCORE==1]
t[,t$x==1]
t[,t$y==2]
t[,t$z==3]
install.packages(rpart)
library("rpart", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages("rpart")
setwd('/Users/tanviwagle/OneDrive/Documents/Freshman\ S2/Data101-Code/9thAssignment')
data <- read.csv('M2019btrain.csv', sep = ",")
library(rpart)
library(rpart.plot)
data <- read.csv('M2019btrain.csv', sep = ",")
library(rpart)
tree <- rpart(GRADE ~ SCORE+ON_SMARTPHONE+ASKS_QUESTIONS+LEAVES_EARLY+LATE_IN_CLASS,data=data)
View(data)
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data)
install.packages("rpart.plot")
rpart.plot(tree)
library(rpart.plot)
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data)
rpart.plot(tree)
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minbucket = 100))
rpart.plot(tree)
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minbucket = 1))
rpart.plot(tree)
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minbucket = 10))
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minbucket = 50))
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minbucket = 50, minsplit=20))
rpart.plot(tree)
predict(tree, newdata=data ,type="class")
file <- predict(tree, newdata=data ,type="class")
data$predict <- file
View(data)
error <- mean(data$GRADE!= data$predict)
error
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION)
rpart.plot(tree)
file <- predict(tree, newdata=data ,type="class")
data$predict <- file
error <- mean(data$GRADE!= data$predict)
error
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minbucket = 50, minsplit=40))
file <- predict(tree, newdata=data ,type="class")
data$predict <- file
error <- mean(data$GRADE!= data$predict)
error
install.packages("devtools")
devtools::install_github("devanshagr/CrossValidation")
install.packages("devtools")
install.packages("devtools")
CrossValidation::cross_validate(data, tree, 5, 0.8)
library(readr)
data <- read.csv('M2019btrain.csv', sep = ",")
View(data)
library(rpart)
library(rpart.plot)
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minbucket = 50, minsplit=40))
rpart.plot(tree)
file <- predict(tree, newdata=data ,type="class")
data$predict <- file
error <- mean(data$GRADE!= data$predict)
error
CrossValidation::cross_validate(data, tree, 5, 0.8)
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minbucket = 0, minsplit=40))
rpart.plot(tree)
file <- predict(tree, newdata=data ,type="class")
data$predict <- file
error <- mean(data$GRADE!= data$predict)
error
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minbucket = 100, minsplit=40))
rpart.plot(tree)
file <- predict(tree, newdata=data ,type="class")
data$predict <- file
error <- mean(data$GRADE!= data$predict)
error
View(data)
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minbucket = 20, minsplit=40))
rpart.plot(tree)
file <- predict(tree, newdata=data ,type="class")
data$predict <- file
error <- mean(data$GRADE!= data$predict)
error
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data)
rpart.plot(tree)
file <- predict(tree, newdata=data ,type="class")
data$predict <- file
error <- mean(data$GRADE!= data$predict)
error
CrossValidation::cross_validate(data, tree, 5, 0.8)
error <- mean(data$GRADE == data$predict)
error
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=datacontrol = rpart.control(minbucket = 20, minsplit=4))
file <- predict(tree, newdata=data ,type="class")
data$predict <- file
error <- mean(data$GRADE == data$predict)
error
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=datacontrol = rpart.control(minbucket = 40, minsplit=4))
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=datacontrol = rpart.control(minbucket = 40, minsplit=4))
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=datacontrol = rpart.control(minbucket=40, minsplit=4))
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minbucket=40, minsplit=4))
rpart.plot(tree)
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minbucket=20, minsplit=4))
rpart.plot(tree)
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minbucket=20, minsplit=2))
rpart.plot(tree)
file <- predict(tree, newdata=data ,type="class")
data$predict <- file
rpart.plot(tree)
error <- mean(data$GRADE == data$predict)
error
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minbucket=20, minsplit=2))
rpart.plot(tree)
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minbucket=50, minsplit=2))
rpart.plot(tree)
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minbucket=30, minsplit=2))
rpart.plot(tree)
file <- predict(tree, newdata=data ,type="class")
data$predict <- file
error <- mean(data$GRADE == data$predict)
error
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minbucket=20, minsplit=2))
rpart.plot(tree)
file <- predict(tree, newdata=data ,type="class")
data$predict <- file
error <- mean(data$GRADE == data$predict)
error
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data)
rpart.plot(tree)
file <- predict(tree, newdata=data ,type="class")
data$predict <- file
error <- mean(data$GRADE == data$predict)
error
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minbucket=20, minsplit=4))
CrossValidation::cross_validate(data, tree, 5, 0.8)
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minbucket=20, minsplit=4))
rpart.plot(tree)
file <- predict(tree, newdata=data ,type="class")
data$predict <- file
error <- mean(data$GRADE == data$predict)
error
CrossValidation::cross_validate(data, tree, 5, 0.8)
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minbucket=30, minsplit=4))
rpart.plot(tree)
file <- predict(tree, newdata=data ,type="class")
data$predict <- file
error <- mean(data$GRADE == data$predict)
error
CrossValidation::cross_validate(data, tree, 5, 0.8)
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minbucket=30, minsplit=5))
rpart.plot(tree)
file <- predict(tree, newdata=data ,type="class")
data$predict <- file
error <- mean(data$GRADE == data$predict)
error
CrossValidation::cross_validate(data, tree, 5, 0.8)
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minbucket=50, minsplit=5))
rpart.plot(tree)
file <- predict(tree, newdata=data ,type="class")
data$predict <- file
error <- mean(data$GRADE == data$predict)
error
CrossValidation::cross_validate(data, tree, 5, 0.8)
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minbucket=50, minsplit=100))
rpart.plot(tree)
file <- predict(tree, newdata=data ,type="class")
data$predict <- file
error <- mean(data$GRADE == data$predict)
error
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minbucket=50, minsplit=1000))
rpart.plot(tree)
file <- predict(tree, newdata=data ,type="class")
data$predict <- file
error <- mean(data$GRADE == data$predict)
error
rpart.plot(tree)
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minbucket=50, minsplit=500))
rpart.plot(tree)
file <- predict(tree, newdata=data ,type="class")
data$predict <- file
error <- mean(data$GRADE == data$predict)
error
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minbucket=50, minsplit=100))
rpart.plot(tree)
file <- predict(tree, newdata=data ,type="class")
data$predict <- file
error <- mean(data$GRADE == data$predict)
error
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minbucket=10, minsplit=100))
rpart.plot(tree)
file <- predict(tree, newdata=data ,type="class")
data$predict <- file
error <- mean(data$GRADE == data$predict)
error
CrossValidation::cross_validate(data, tree, 5, 0.8)
CrossValidation::cross_validate(data, tree, 10, 0.8)
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data)
rpart.plot(tree)
file <- predict(tree, newdata=data ,type="class")
data$predict <- file
error <- mean(data$GRADE == data$predict)
error
CrossValidation::cross_validate(data, tree, 10, 0.8)
tree <- rpart(GRADE ~ SCORE+PARTICIPATION,data=data)
rpart.plot(tree)
file <- predict(tree, newdata=data ,type="class")
data$predict <- file
error <- mean(data$GRADE == data$predict)
error
test<- read.csv('M2019_test_students.csv', sep = ",")
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=test)
test<- read.csv('M2019_test_students.csv', sep = ",")
decision <- predict(tree, newdata=data ,type="class")
test<- read.csv('M2019_test_students.csv', sep = ",")
decision <- predict(tree, newdata=test ,type="class")
View(decision)
file <- predict(tree, newdata=data ,type="class")
data$predict <- file
View(data)
test<- read.csv('M2019_test_students.csv', sep = ",")
decision <- predict(tree, newdata=test ,type="class")
old<- read.csv('mysubmission-old.csv', sep = ",")
error <- mean(old$GRADE == decision)
error
test$predict <- decision
View(test)
sub <- read.csv('M2019_sample_submission.csv', sep = ",")
sub$GRADE <- decision
write.csv(sub, file = "mysubmission.csv",row.names=FALSE)
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data)
test<- read.csv('M2019_test_students.csv', sep = ",")
decision <- predict(tree, newdata=test ,type="class")
test$predict <- decision
View(test)
sub <- read.csv('M2019_sample_submission.csv', sep = ",")
sub$GRADE <- decision
write.csv(sub, file = "mysubmission.csv",row.names=FALSE)
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data)
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minbucket=10))
rpart.plot(tree)
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minbucket=30, minsplit=50))
rpart.plot(tree)
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minbucket=10))
rpart.plot(tree)
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minbucket=50, minsplit=50))
rpart.plot(tree)
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minsplit=1000))
rpart.plot(tree)
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minsplit=1000))
rpart.plot(tree)
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minsplit=1000), box.palette="blue")
rpart.plot(tree,box.palette="blue")
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minsplit=400))
rpart.plot(tree,box.palette="blue")
rpart.plot(tree)
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minbucket=200))
rpart.plot(tree)
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minbucket=100))
rpart.plot(tree)
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data)
file <- predict(tree, newdata=data ,type="class")
data$predict <- file
error <- mean(data$GRADE == data$predict)
error
CrossValidation::cross_validate(data, tree, 5, 0.8)
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minbucket=10))
CrossValidation::cross_validate(data, tree, 5, 0.8)
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minbucket=50, minsplit=50))
CrossValidation::cross_validate(data, tree, 5, 0.8)
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minsplit=400))
CrossValidation::cross_validate(data, tree, 5, 0.8)
tree <- rpart(GRADE ~ SCORE+ASKS_QUESTIONS+LEAVES_EARLY+PARTICIPATION,data=data,control = rpart.control(minbucket=100))
CrossValidation::cross_validate(data, tree, 5, 0.8)
